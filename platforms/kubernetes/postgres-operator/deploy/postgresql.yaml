apiVersion: postgres.radondb.io/v1
kind: PostgreSQL
metadata:
  name: lzzhang
  #namespace: radondb-postgres-operator
spec:
  action: start #stop start
  deletepvc: true
  antiaffinity:
    policy: preferred                             # preferred/required
    podAntiAffinityTerm: autofailover-readwrite   # none/autofailover-readwrite/autofailover-readwrite-readonly
    topologyKey: "kubernetes.io/hostname"         # when policy is required, only allow "kubernetes.io/hostname"
  services:
    - selector: autofailover # autofailover/primary/standby/readonly/standby-readonly
      metadata:
        name: autofailover
      spec:
        type: ClusterIP
        ports:
          - name: exporter # cant' change the name
            port: 9187 #targetPort: 9187
    - selector: primary # autofailover/primary/standby/readonly/standby-readonly
      metadata:
        name: readwrite
      spec:
        type: ClusterIP
        ports:
          - name: prime # cant' change the name
            port: 5432
          - name: exporter # cant' change the name
            port: 9187
    - selector: standby-readonly
      metadata:
        name: standby-readonly
      spec:
        type: ClusterIP
        ports:
          - name: prime # cant' change the name
            port: 5432
          - name: exporter # cant' change the name
            port: 9187
  autofailover:
    hbas:
      - host all all all md5
    configs:
      - enable_seqscan=on
    podspec:
      terminationGracePeriodSeconds: 60
#      priorityClassName: high-priority
      containers:
        - image: radondb-postgresql:15.0-v1.1.0
          imagePullPolicy: IfNotPresent
          name: postgresql #can't change the name
          volumeMounts:
            - name: data # can't change the name
              mountPath: /var/lib/postgresql/data
          resources:
            limits:
              memory: "200Mi"
              cpu: "0.2"
        - image: radondb-postgres-exporter:v1.1.0
          imagePullPolicy: IfNotPresent
          name: exporter # can't change the name
          volumeMounts:
            - name: data # can't change the name
              mountPath: /var/lib/postgresql/data
          resources:
            limits:
              memory: "100Mi"
              cpu: "0.1"
    volumeClaimTemplates:
      - metadata:
          name: data
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 1Gi
  postgresql:
    users:
      admin:
        - name: root
          password: root
      normal:
        - name: lzzhang
          password: lzzhang
    hbas:
      - host all all all md5
    configs:
      - max_connections=133
      - shared_buffers=133MB
      - port=5432
      - enable_seqscan=on
    readwriteinstance:
      replicas: 2
      podspec:
        terminationGracePeriodSeconds: 60
        containers:
          - image: radondb-postgresql:15.0-v1.1.0
            imagePullPolicy: IfNotPresent
            name: postgresql #can't change the name
            volumeMounts:
              - name: data # can't change the name
                mountPath: /var/lib/postgresql/data
            resources:
              limits:
                memory: "200Mi"
                cpu: "0.2"
          - image: radondb-postgres-exporter:v1.1.0
            imagePullPolicy: IfNotPresent
            name: exporter # can't change the name
            volumeMounts:
              - name: data # can't change the name
                mountPath: /var/lib/postgresql/data
            resources:
              limits:
                memory: "100Mi"
                cpu: "0.1"
      volumeClaimTemplates:
        - metadata:
            name: data
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 1Gi
    readonlyinstance:
      streaming: async  #sync/async
      replicas: 0
      podspec:
        terminationGracePeriodSeconds: 60
        containers:
          - image: radondb-postgresql:15.0-v1.1.0
            imagePullPolicy: IfNotPresent
            name: postgresql #can't change the name
            volumeMounts:
              - name: data # can't change the name
                mountPath: /var/lib/postgresql/data
            resources:
              limits:
                memory: "200Mi"
                cpu: "0.2"
          - image: radondb-postgres-exporter:v1.1.0
            imagePullPolicy: IfNotPresent
            name: exporter # can't change the name
            volumeMounts:
              - name: data # can't change the name
                mountPath: /var/lib/postgresql/data
            resources:
              limits:
                memory: "100Mi"
                cpu: "0.1"
      volumeClaimTemplates:
        - metadata:
            name: data
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 1Gi
  backup: TODO later. cronbackup, manual backup by kubectl patch
  #restore:
  #  fromssh:
  #    path: /home/lzzhang/xx
  #    address: root:password:192.168.0.8:22 # or local 'local' restore from the first postgresql node
